
Smart_Home_D66.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000028e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000021a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  0000028e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000028e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000300  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b72  00000000  00000000  00000388  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000871  00000000  00000000  00000efa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000055e  00000000  00000000  0000176b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000104  00000000  00000000  00001ccc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052e  00000000  00000000  00001dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003de  00000000  00000000  000022fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000026dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_13>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ea e1       	ldi	r30, 0x1A	; 26
  90:	f2 e0       	ldi	r31, 0x02	; 2
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a0 30       	cpi	r26, 0x00	; 0
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a0 e0       	ldi	r26, 0x00	; 0
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a1 30       	cpi	r26, 0x01	; 1
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 9a 00 	call	0x134	; 0x134 <main>
  b2:	0c 94 0b 01 	jmp	0x216	; 0x216 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <__vector_13>:
	
*/


ISR(TIMER1_COMPA_vect) // Timer1 compare match interrupt
{
  ba:	1f 92       	push	r1
  bc:	0f 92       	push	r0
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	0f 92       	push	r0
  c2:	11 24       	eor	r1, r1
  c4:	2f 93       	push	r18
  c6:	3f 93       	push	r19
  c8:	4f 93       	push	r20
  ca:	5f 93       	push	r21
  cc:	6f 93       	push	r22
  ce:	7f 93       	push	r23
  d0:	8f 93       	push	r24
  d2:	9f 93       	push	r25
  d4:	af 93       	push	r26
  d6:	bf 93       	push	r27
  d8:	ef 93       	push	r30
  da:	ff 93       	push	r31
	static uint8 counter = 0;
	// Start if counter = 0 by making Servo Pin high
	if(counter==0){DIO_Set_Pin_Output(PORTD,Pin7,High);}
  dc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  e0:	81 11       	cpse	r24, r1
  e2:	06 c0       	rjmp	.+12     	; 0xf0 <__vector_13+0x36>
  e4:	8b b1       	in	r24, 0x0b	; 11
  e6:	41 e0       	ldi	r20, 0x01	; 1
  e8:	67 e0       	ldi	r22, 0x07	; 7
  ea:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_Set_Pin_Output>
  ee:	07 c0       	rjmp	.+14     	; 0xfe <__vector_13+0x44>
	else if(counter == 1){
  f0:	81 30       	cpi	r24, 0x01	; 1
  f2:	29 f4       	brne	.+10     	; 0xfe <__vector_13+0x44>
		if(door_state == 0){
			DIO_Set_Pin_Output(PORTD,Pin7,Low);
  f4:	8b b1       	in	r24, 0x0b	; 11
  f6:	40 e0       	ldi	r20, 0x00	; 0
  f8:	67 e0       	ldi	r22, 0x07	; 7
  fa:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_Set_Pin_Output>
	else if(counter == 5){
		if(door_state == 1){
			DIO_Set_Pin_Output(PORTD,Pin7,Low);
		}
	}
	if(counter<40){counter++;}
  fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 102:	88 32       	cpi	r24, 0x28	; 40
 104:	20 f4       	brcc	.+8      	; 0x10e <__vector_13+0x54>
 106:	8f 5f       	subi	r24, 0xFF	; 255
 108:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 10c:	02 c0       	rjmp	.+4      	; 0x112 <__vector_13+0x58>
	else {counter = 0;}
 10e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
}
 112:	ff 91       	pop	r31
 114:	ef 91       	pop	r30
 116:	bf 91       	pop	r27
 118:	af 91       	pop	r26
 11a:	9f 91       	pop	r25
 11c:	8f 91       	pop	r24
 11e:	7f 91       	pop	r23
 120:	6f 91       	pop	r22
 122:	5f 91       	pop	r21
 124:	4f 91       	pop	r20
 126:	3f 91       	pop	r19
 128:	2f 91       	pop	r18
 12a:	0f 90       	pop	r0
 12c:	0f be       	out	0x3f, r0	; 63
 12e:	0f 90       	pop	r0
 130:	1f 90       	pop	r1
 132:	18 95       	reti

00000134 <main>:
 134:	ff cf       	rjmp	.-2      	; 0x134 <main>

00000136 <DIO_Set_Pin_Output>:
 136:	41 30       	cpi	r20, 0x01	; 1
 138:	a1 f5       	brne	.+104    	; 0x1a2 <DIO_Set_Pin_Output+0x6c>
 13a:	81 30       	cpi	r24, 0x01	; 1
 13c:	89 f0       	breq	.+34     	; 0x160 <DIO_Set_Pin_Output+0x2a>
 13e:	28 f0       	brcs	.+10     	; 0x14a <DIO_Set_Pin_Output+0x14>
 140:	82 30       	cpi	r24, 0x02	; 2
 142:	c9 f0       	breq	.+50     	; 0x176 <DIO_Set_Pin_Output+0x40>
 144:	83 30       	cpi	r24, 0x03	; 3
 146:	11 f1       	breq	.+68     	; 0x18c <DIO_Set_Pin_Output+0x56>
 148:	08 95       	ret
 14a:	2b b3       	in	r18, 0x1b	; 27
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_Set_Pin_Output+0x20>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_Set_Pin_Output+0x1c>
 15a:	82 2b       	or	r24, r18
 15c:	8b bb       	out	0x1b, r24	; 27
 15e:	08 95       	ret
 160:	28 b3       	in	r18, 0x18	; 24
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_Set_Pin_Output+0x36>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_Set_Pin_Output+0x32>
 170:	82 2b       	or	r24, r18
 172:	88 bb       	out	0x18, r24	; 24
 174:	08 95       	ret
 176:	25 b3       	in	r18, 0x15	; 21
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <DIO_Set_Pin_Output+0x4c>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	6a 95       	dec	r22
 184:	e2 f7       	brpl	.-8      	; 0x17e <DIO_Set_Pin_Output+0x48>
 186:	82 2b       	or	r24, r18
 188:	85 bb       	out	0x15, r24	; 21
 18a:	08 95       	ret
 18c:	22 b3       	in	r18, 0x12	; 18
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <DIO_Set_Pin_Output+0x62>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <DIO_Set_Pin_Output+0x5e>
 19c:	82 2b       	or	r24, r18
 19e:	82 bb       	out	0x12, r24	; 18
 1a0:	08 95       	ret
 1a2:	41 11       	cpse	r20, r1
 1a4:	37 c0       	rjmp	.+110    	; 0x214 <DIO_Set_Pin_Output+0xde>
 1a6:	81 30       	cpi	r24, 0x01	; 1
 1a8:	91 f0       	breq	.+36     	; 0x1ce <DIO_Set_Pin_Output+0x98>
 1aa:	28 f0       	brcs	.+10     	; 0x1b6 <DIO_Set_Pin_Output+0x80>
 1ac:	82 30       	cpi	r24, 0x02	; 2
 1ae:	d9 f0       	breq	.+54     	; 0x1e6 <DIO_Set_Pin_Output+0xb0>
 1b0:	83 30       	cpi	r24, 0x03	; 3
 1b2:	29 f1       	breq	.+74     	; 0x1fe <DIO_Set_Pin_Output+0xc8>
 1b4:	08 95       	ret
 1b6:	2b b3       	in	r18, 0x1b	; 27
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <DIO_Set_Pin_Output+0x8c>
 1be:	88 0f       	add	r24, r24
 1c0:	99 1f       	adc	r25, r25
 1c2:	6a 95       	dec	r22
 1c4:	e2 f7       	brpl	.-8      	; 0x1be <DIO_Set_Pin_Output+0x88>
 1c6:	80 95       	com	r24
 1c8:	82 23       	and	r24, r18
 1ca:	8b bb       	out	0x1b, r24	; 27
 1cc:	08 95       	ret
 1ce:	28 b3       	in	r18, 0x18	; 24
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_Set_Pin_Output+0xa4>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	6a 95       	dec	r22
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_Set_Pin_Output+0xa0>
 1de:	80 95       	com	r24
 1e0:	82 23       	and	r24, r18
 1e2:	88 bb       	out	0x18, r24	; 24
 1e4:	08 95       	ret
 1e6:	25 b3       	in	r18, 0x15	; 21
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_Set_Pin_Output+0xbc>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_Set_Pin_Output+0xb8>
 1f6:	80 95       	com	r24
 1f8:	82 23       	and	r24, r18
 1fa:	85 bb       	out	0x15, r24	; 21
 1fc:	08 95       	ret
 1fe:	22 b3       	in	r18, 0x12	; 18
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_Set_Pin_Output+0xd4>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_Set_Pin_Output+0xd0>
 20e:	80 95       	com	r24
 210:	82 23       	and	r24, r18
 212:	82 bb       	out	0x12, r24	; 18
 214:	08 95       	ret

00000216 <_exit>:
 216:	f8 94       	cli

00000218 <__stop_program>:
 218:	ff cf       	rjmp	.-2      	; 0x218 <__stop_program>
